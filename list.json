{
    "html": {
        "categories": [],
        "context": [
            "As document's document element.",
            "Wherever a subdocument fragment is allowed in a compound document."
        ],
        "content": [
            "A [head] element followed by a [body] element."
        ],
        "tag omission": [
            "An [html] element's start tag can be omitted if the first thing inside the [html] element is not a comment.",
            "An [html] element's end tag can be omitted if the [html] element is not immediately followed by a comment."
        ],
        "attributes": [
            "global attributes"
        ],
        "accessibility": [
            "for authors",
            "for implementers"
        ],
        "DOM interface": [
            "[Exposed=Window]",
            "interface HTMLHtmlElement: HTMLElement {",
            "  [HTMLConstructor] constructor();",
            "  ",
            "  // also has obsolete members",
            "};"
        ]
    },
    "head": {
        "categories": [],
        "context": [
            "As the first element in an [html] element."
        ],
        "content": [
            "If the document is an [iframe] srcdoc document or if title information is available from a higher-level protocol: Zero or more elements of metadata content, of which no more than one is a [title] element and no more than one is a [base] element.",
            "Otherwise: One or more elements of metadata content, of which exactly one is a [title] element and no more than one is a [base] element."
        ],
        "tag omission": [
            "A [head] element's start tag can be omitted if the element is empty, or if the first thing inside the [head] element is an element.",
            "A [head] element's end tag can be omitted if the [head] element is not immediately followed by ASCII whitespace or a comment."
        ],
        "attributes": [
            "global attributes"
        ],
        "accessibility": [
            "for authors",
            "for implementers"
        ],
        "DOM interface": [
            "[Exposed=Window]",
            "interface HTMLHeadElement: HTMLElement {",
            "  [HTMLConstructor] constructor();",
            "};"
        ]
    },
    "title": {
        "categories": [
            "metadata content"
        ],
        "context": [
            "In a [head] element containing no other [title] elements."
        ],
        "content": [
            "Text that is not inter-element whitespace."
        ],
        "tag omission": [
            "Neither tag is omissible."
        ],
        "attributes": [
            "global attributes"
        ],
        "accessibility": [
            "for authors",
            "for implementers"
        ],
        "DOM interface": [
            "[Exposed=Window]",
            "interface HTMLTitleElement: HTMLElement {",
            "  [HTMLConstructor] constructor();",
            "  ",
            "  [CEReactions] attribute DOMString text;",
            "};"
        ]
    },
    "base": {
        "categories": [
            "metadata content"
        ],
        "context": [
            "In a [head] element containing no other [base] elements."
        ],
        "content": [],
        "tag omission": [
            "No end tag."
        ],
        "attributes": [
            "global attributes",
            "href - Document base URL",
            "target - Default navigable for hyperlink navigation and from submission"
        ],
        "accessibility": [
            "for authors",
            "for implementers"
        ],
        "DOM interface": [
            "[Exposed=Window]",
            "interface HTMLBaseElement: HTMLElement {",
            "  [HTMLConstructor] constructor();",
            "  ",
            "  [CEReactions] attribute USVString href;",
            "  [CEReactions] attribute DOMString target;",
            "};"
        ]
    },
    "link": {
        "categories": [
            "metadata content",
            "If the element is allowed in the body: flow content.",
            "If the element is allowed in the body: phrasing content."
        ],
        "context": [
            "Where metadata content is expected.",
            "In a [noscript] element that is a child of a [head] element.",
            "If the element is allowed in the body: where phrasing content is expected."
        ],
        "content": [],
        "tag omission": [
            "No end tag."
        ],
        "attributes": [
            "global attributes",
            "href - Address of the hyperlink",
            "crossorigin - How the element handles crossorigin requests",
            "rel - Relationship between the document containing the hyperlink and the destination resource",
            "media - Applicable media",
            "integrity - Integrity metadata used in Subresource Integrity checks",
            "hreflang - Language of the linked resource",
            "type - Hint for the type of the referenced resource",
            "referrerpolicy - Referrer policy for fetches initiated by the element",
            "sizes - Sizes of the icons (for rel=\"icon\")",
            "imagesrcset - Images to use in different situations, e.g., high-resolution displays, small monitors, etc. (for rel=\"preload\")",
            "imagesizes - Image sizes for different page layouts (for rel=\"preload\")",
            "as - Potential destination for a preload request (for rel=\"preload\" and rel=\"modulepreload\")",
            "blocking - Whether the element is potentially render-blocking",
            "color - Color to use when customizing a site's icon (for rel=\"mask-icon\")",
            "disabled - Whether the link is disabled",
            "fetchpriority - Sets the priority for fetches initiated by the element. Also, the title attribute has special semantics on this element: Title of the link; CSS style sheet set name"
        ],
        "accessibility": [
            "for authors",
            "for implementers"
        ],
        "DOM interface": [
            "[Exposed=Window]",
            "interface HTMLLinkElement : HTMLElement {",
            "  [HTMLConstructor] constructor();",
            "  [CEReactions] attribute USVString href;",
            "  [CEReactions] attribute DOMString? crossOrigin;",
            "  [CEReactions] attribute DOMString rel;",
            "  [CEReactions] attribute DOMString as;",
            "  [SameObject, PutForwards=value] readonly attribute DOMTokenList relList;",
            "  [CEReactions] attribute DOMString media;",
            "  [CEReactions] attribute DOMString integrity;",
            "  [CEReactions] attribute DOMString hreflang;",
            "  [CEReactions] attribute DOMString type;",
            "  [SameObject, PutForwards=value] readonly attribute DOMTokenList sizes;",
            "  [CEReactions] attribute USVString imageSrcset;",
            "  [CEReactions] attribute DOMString imageSizes;",
            "  [CEReactions] attribute DOMString referrerPolicy;",
            "  [SameObject, PutForwards=value] readonly attribute DOMTokenList blocking;",
            "  [CEReactions] attribute boolean disabled;",
            "  [CEReactions] attribute DOMString fetchPriority;",
            "  // also has obsolete members",
            "};",
            "HTMLLinkElement includes LinkStyle;"
        ]
    },
    "meta": {
        "categories": [
            "metadata content",
            "If the itemprop attribute is present: flow content.",
            "If the itemprop attribute is present: phrasing content."
        ],
        "context": [
            "If the charset attribute is present, or if the element's http-equiv attribute is in the Encoding declaration state: in a [head] element.",
            "If the http-equiv attribute is present but not in the Encoding declaration state: in a [head] element.",
            "If the http-equiv attribute is present but not in the Encoding declaration state: in a [noscript] element that is a child of a [head] element.",
            "If the name attribute is present: where metadata content is expected.",
            "If the itemprop attribute is present: where metadata content is expected.",
            "If the itemprop attribute is present: where phrasing content is expected."
        ],
        "content": [],
        "tag omission": [
            "No end tag."
        ],
        "attributes": [
            "global attributes",
            "name - Metadate name",
            "http-equiv - Pragma directive",
            "content - Value of the element",
            "charset - Character encoding declaration",
            "media - Applicable media"
        ],
        "accessibility": [
            "for authors",
            "for implementers"
        ],
        "DOM interface": [
            "[Exposed=Window]",
            "interface HTMLMetaElement : HTMLElement {",
            "  [HTMLConstructor] constructor();",
            "  [CEReactions] attribute DOMString name;",
            "  [CEReactions] attribute DOMString httpEquiv;",
            "  [CEReactions] attribute DOMString content;",
            "  [CEReactions] attribute DOMString media;",
            "  // also has obsolete members",
            "};"
        ]
    },
    "style": {
        "categories": [
            "metadata content"
        ],
        "context": [
            "Where metadata content is expected.",
            "In a [noscript] element that is a child of a [head] element."
        ],
        "content": [
            "Text that gives a conformant style sheet."
        ],
        "tag omission": [
            "Neither tag is omissible."
        ],
        "attributes": [
            "global attributes",
            "media - Applicable media",
            "blocking - Whether the element is potentially render-blocking",
            "Also, the title attribute has special semantics on this element: CSS style sheet set name."
        ],
        "accessibility": [
            "for authors",
            "for implementers"
        ],
        "DOM interface": [
            "[Exposed=Window]",
            "interface HTMLStyleElement : HTMLElement {",
            "  [HTMLConstructor] constructor();",
            "  attribute boolean disabled;",
            "  [CEReactions] attribute DOMString media;",
            "  [SameObject, PutForwards=value] readonly attribute DOMTokenList blocking;",
            "  // also has obsolete members",
            "};",
            "HTMLStyleElement includes LinkStyle;"
        ]
    },
    "body": {
        "categories": [],
        "context": [
            "As the second element in an [html] element."
        ],
        "content": [
            "flow content"
        ],
        "tag omission": [
            "A [body] element's start tag can be omitted if the element is empty, or if the first thing inside the [body] element is not ASCII whitespace or a comment, except if the first thing inside the [body] element is a [meta], [noscript], [link], [script], [style], or [template] element.",
            "A [body] element's end tag can be omitted if the [body] element is not immediately followed by a comment."
        ],
        "attributes": [
            "global attributes",
            "onafterprint",
            "onbeforeprint",
            "onbeforeunload",
            "onhashchange",
            "onlanguagechange",
            "onmessage",
            "onmessageerror",
            "onoffline",
            "ononline",
            "onpagehide",
            "onpageshow",
            "onpopstate",
            "onrejectionhandled",
            "onstorage",
            "onunhandledrejection",
            "onunload"
        ],
        "accessibility": [
            "for authors",
            "for implementers"
        ],
        "DOM interface": [
            "[Exposed=Window]",
            "interface HTMLBodyElement : HTMLElement {",
            "  [HTMLConstructor] constructor();",
            "  // also has obsolete members",
            "};",
            "HTMLBodyElement includes WindowEventHandlers;"
        ]
    },
    "article": {
        "categories": [
            "flow content",
            "sectioning content",
            "palpable content"
        ],
        "context": [
            "Where sectioning content is expected."
        ],
        "content": [
            "flow content"
        ],
        "tag omission": [
            "Neither tag is omissible."
        ],
        "attributes": [
            "global attributes"
        ],
        "accessibility": [
            "for authors",
            "for implementers"
        ],
        "DOM interface": [
            "Uses HTMLElement."
        ]
    },
    "section": {
        "categories": [
            "flow content",
            "sectioning content",
            "palpable content"
        ],
        "context": [
            "Where sectioning content is expected."
        ],
        "content": [
            "flow content"
        ],
        "tag omission": [
            "Neither tag is omissible."
        ],
        "attributes": [
            "global attributes"
        ],
        "accessibility": [
            "for authors",
            "for implementers"
        ],
        "DOM interface": [
            "Uses HTMLElement."
        ]
    },
    "nav": {
        "categories": [
            "flow content",
            "sectioning content",
            "palpable content"
        ],
        "context": [
            "Where sectioning content is expected."
        ],
        "content": [
            "flow content"
        ],
        "tag omission": [
            "Neither tag is omissible."
        ],
        "attributes": [
            "global attributes"
        ],
        "accessibility": [
            "for authors",
            "for implementers"
        ],
        "DOM interface": [
            "Uses HTMLElement."
        ]
    },
    "copy": {
        "categories": [],
        "context": [],
        "content": [],
        "tag omission": [],
        "attributes": [
            "global attributes"
        ],
        "accessibility": [
            "for authors",
            "for implementers"
        ],
        "DOM interface": []
    }
}